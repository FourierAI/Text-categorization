dejesus
eniac
seas
upenn
edu
cavalier
subject
help
organization
university
pennsylvania
lines
nntp
posting
host
eniac
seas
upenn
edu
hello
hope
help
am
currently
project
am
trying
communicate
ibm
phoenix
bios
using
board
intel
cpu
uart
chip
board
fine
transmit
command
terminal
emulation
mode
kermit
wrong
initialization
protocol
try
access
unit
built
using
sizable
chunk
code
using
perform
calculations
operations
difficult
code
assembly
language
included
assembly
code
am
running
code
am
trying
am
doing
blatantly
incorrectly
am
missing
lack
knowledge
rs
serial
communications
please
mail
wrote
assembly
language
wait
character
received
check
character
received
leds
indicate
programs
written
set
com
port
send
character
bioscom
function
bios
software
interrupt
int
function
dos
triple
checked
baud
rate
parity
none
stop
bits
character
length
bits
interrupt
calls
currently
am
loss
wrong
hardware
gurus
comment
thanks
alot
hubert
de
jesus
dejesus
eniac
seas
upenn
edu
intel
asm
command
equ
command
register
porta
equ
port
timerlo
equ
bits
timer
timerhi
equ
low
bits
timer
uartdata
equ
uart
data
register
uartcmd
equ
uart
command
register
org
sram
location
mvi
set
low
timer
bits
sta
timerlo
mvi
set
timer
bits
sta
timerhi
mvi
start
timer
enable
port
sta
command
mvi
display
segment
leds
sta
porta
mvi
uart
command
sta
uartcmd
sta
uartcmd
sta
uartcmd
mvi
internally
reset
uart
sta
uartcmd
lda
uartdata
remove
extraneous
data
mvi
init
uart
data
bits
sta
uartcmd
parity
stop
bit
async
mvi
enable
transmit
receive
sta
uartcmd
init
lda
uartcmd
read
status
register
ani
rxrdy
jz
init
loop
lda
uartdata
read
data
character
cpi
character
jnz
init
loop
mvi
character
received
sta
porta
display
segment
leds
hlt
using
bioscom
include
stdio
include
stdlib
include
bios
define
init
define
send
define
receive
define
status
define
com
void
main
char
abyte
abyte
xa
bioscom
init
abyte
com
printf
initialized
comm
port
bioscom
status
com
abyte
bioscom
send
abyte
com
printf
sent
start
character
using
int
include
stdio
include
stdlib
include
dos
include
bios
main
union
regs
registers
registers
ah
registers
al
xa
registers
dx
int
registers
registers
printf
com
initialized
registers
ah
registers
al
registers
dx
int
registers
registers
printf
sent
start
character