robert
cpuserver
acsc
com
robert
grant
subject
virtual
reality
cheap
organization
uscacsc
los
angeles
lines
distribution
world
reply
robert
cpuserver
acsc
com
robert
grant
nntp
posting
host
cpuserver
acsc
com
hi
people
vr
software
announcing
release
multiverse
multiverse
multi
user
immersive
windows
based
virtual
reality
system
primarily
focused
entertainment
research
features
client
server
based
model
using
berkeley
sockets
limit
users
apart
performance
generic
clients
customizable
servers
hierachical
objects
allowing
attachment
cameras
light
sources
multiple
light
sources
ambient
spot
objects
extension
code
handle
unique
functionality
easily
attached
functionality
client
client
built
fast
render
loop
basically
changes
told
server
renders
image
user
viewpoint
provides
server
information
user
actions
communicated
clients
users
client
designed
generic
words
don
develop
client
enter
world
means
resources
spent
enhancing
client
software
adapting
adaptations
explained
moment
occur
servers
release
client
software
supports
following
functionality
hierarchical
objects
associated
addressing
multiple
light
sources
types
ambient
spot
user
interface
panels
colour
polygonal
rendering
phong
shading
optional
wireframe
faster
frame
rates
mouse
keyboard
input
people
disappointed
software
doesn
support
powerglove
input
device
don
enhancements
server
customization
following
basic
support
provided
release
potential
world
server
developers
transparent
client
management
client
message
handling
sound
takes
headache
accepting
terminating
clients
receiving
messages
application
writer
assumption
happening
locally
object
extension
functionality
provided
allow
animate
objects
server
selectable
extension
installation
means
decide
objects
extended
functionality
world
basically
call
extension
initialisers
event
handler
registration
develop
extensions
object
basically
write
callback
functions
events
object
respond
current
events
supported
init
move
change
collide
terminate
collision
detection
registration
object
respond
collision
events
provide
basic
information
collision
detection
management
software
callback
activated
collision
occurs
software
kept
separate
worldserver
applications
application
developer
build
library
extended
objects
choose
following
world
server
application
provide
initworld
function
choose
object
extensions
supported
plus
initialization
provide
positionobject
function
determine
client
provide
installworldobjects
function
load
world
wld
file
client
provide
getworldtype
function
tell
client
persona
provide
animateworld
function
wild
minimum
objects
move
calling
move
function
server
sleep
bit
avoid
outrunning
clients
prove
line
counts
world
servers
ve
provided
generic
lines
dactyl
lines
complicated
collision
detection
due
stairs
probably
improved
future
versions
dogfight
lines
location
software
located
following
site
ftp
washington
edu
directory
pub
virtual
worlds
file
multiverse
tar
futures
client
texture
mapping
realistic
rendering
buffering
similar
gouraud
shading
hmd
support
etc
etc
server
physical
modelling
gravity
friction
etc
enhanced
object
management
interaction
etc
etc
improved
comms
hope
provides
people
understanding
multiverse
software
unfortunately
comes
practically
zero
documentation
able
rectified
hope
people
enjoy
software
useful
explorations
virtual
universe
ve
found
fascinating
developing
love
add
support
powerglove
hmd
finally
major
disclaimer
totally
amateur
code
mean
support
code
kindness
heart
pure
desperation
provide
held
responsible
bad
happen
code
own
risk
disclaimer
course
love
positive
contributions
criticisms
encouraged
contact
hates
dev
null
living
write
thanks
robert
robert
acsc
com