art
cs
ualberta
ca
art
mulder
subject
comp
windows
getting
performance
faq
summary
posting
contains
list
suggestions
performance
workstation
buying
hardware
keywords
faq
speed
nntp
posting
host
spirit
riv
cs
ualberta
ca
reply
art
cs
ualberta
ca
art
mulder
organization
university
alberta
edmonton
canada
expires
thu
gmt
lines
archive
name
faq
speedups
modified
maximize
performance
monthly
posting
compiled
art
mulder
art
cs
ualberta
ca
ram
faster
cpu
disk
space
faster
ethernet
standard
responses
hear
improve
performance
workstation
hardware
isn
option
wonder
hardware
necessity
faq
list
collection
suggestions
ideas
people
net
performance
windows
workstation
purchasing
hardware
performance
highly
subjective
issue
individual
user
balance
speed
versus
features
personal
decision
document
expected
contain
subjective
opinions
amongst
objective
document
specifically
concerned
course
factors
affect
performance
workstation
outside
scope
document
people
seriously
system
performance
look
reilly
nutshell
handbook
system
performance
tuning
mike
loukides
reading
looks
written
comprehensive
treatment
system
performance
unaware
similar
books
ed
table
contents
introduction
administrivia
faq
window
managers
server
server
locking
server
ram
starting
server
fonts
resources
file
define
display
properly
clients
clock
terminal
emulator
tuning
client
miscellaneous
suggestions
pretty
pictures
quicker
mouse
programming
sources
information
author
notes
changed
issue
issue
introduction
administrivia
document
posted
month
th
usenet
news
comp
windows
news
answers
comp
answers
reading
copy
faq
months
modified
date
probably
locate
edition
information
outdated
newsgroups
site
receive
article
expired
retrieve
faq
archive
site
exist
usenet
faq
archive
sites
access
please
introduction
news
answers
newsgroup
posting
news
answers
main
faq
archive
rtfm
mit
edu
document
found
pub
usenet
news
answers
faq
speedups
access
anonymous
ftp
retrieve
sending
mail
message
mail
server
pit
manager
mit
edu
command
send
usenet
news
answers
faq
speedups
message
body
faq
david
lewis
faq
craft
uunet
uu
net
maintains
informative
written
comp
windows
frequently
questions
document
focus
information
faq
concentrates
performance
comp
windows
faq
address
issue
speed
regards
server
gist
topic
faster
please
faq
complete
details
window
managers
lot
window
managers
lots
features
abilities
choice
necessity
balancing
act
performance
useful
features
respondents
agreed
twm
candidate
speedy
window
manager
couple
generic
tricks
try
soup
window
manger
unnecessary
zooming
opaque
move
lay
windows
tiled
manner
reduce
amount
cpu
power
spent
raising
lowering
overlapping
windows
joe
english
joe
trystero
art
com
ve
found
font
tiling
aka
misc
fixed
medium
normal
iso
biggest
font
sun
screen
column
terminal
windows
display
overlap
font
suggestions
accepted
server
server
server
proper
match
hardware
monochrome
monitor
monochrome
server
monochrome
sun
haven
noticed
difference
xsun
colour
server
xsunmono
xsunmono
contribute
paging
thanks
jonny
farringdon
farringdon
psychol
ucl
ac
uk
michael
salmon
michael
salmon
eos
ericsson
se
server
compiled
difference
jeff
law
law
schirf
cs
utah
edu
advises
sun
system
compiled
gcc
version
unbundled
sun
compiler
expect
speedups
server
using
bundled
sunos
compiler
assume
similar
results
occur
quality
commercial
compilers
market
locking
server
ram
tried
hacking
server
locked
ram
paged
eg
via
call
plock
help
performance
ve
inquiry
topic
pointers
plock
function
call
hard
evidence
tried
am
position
try
thanks
eric
claeys
ecc
eperm
att
com
danny
backx
db
sunbim
juan
martin
juando
cnm
es
starting
server
joe
english
joe
trystero
art
com
start
lot
clients
xsession
whatever
sleep
launching
changed
xclients
script
logging
actually
time
heavily
loaded
system
core
sounds
crazy
confirmed
warner
losh
imp
solbourne
com
provided
explanation
summarized
start
server
takes
huge
amount
time
start
accepting
connections
lot
initialization
server
starts
process
touches
pages
process
running
time
fight
server
cpu
importantly
memory
sleep
server
chance
sorted
clients
start
similarly
lot
initialization
whenever
client
program
starts
toolkits
registering
widgets
resources
fetched
programs
initializing
databases
forth
activity
typically
memory
intensive
initialization
process
reached
steady
memory
usage
typically
settles
using
pages
using
sleeps
stagger
launching
clients
xinitrc
avoid
fighting
workstation
limited
resources
definitely
mileage
vary
situation
variables
considered
available
ram
local
swap
space
load
average
users
system
clients
starting
etc
currently
xinitrc
situation
sleep
exec
xclock
sleep
exec
xbiff
sleep
exec
xterm
sleep
exec
xterm
ve
experimented
sleep
exec
xclock
sleep
exec
xbiff
sleep
exec
xterm
sleep
exec
xterm
ve
tried
sleep
exec
start
clients
script
start
clients
script
sleep
exec
xclock
sleep
exec
xbiff
sleep
exec
xterm
sleep
exec
xterm
idea
xinit
completely
finished
processing
xinitrc
settled
steady
sleep
expired
clients
launched
yielded
fairly
comparable
results
stuck
current
setup
simplicity
probably
experiment
bit
setup
suits
fonts
loading
fonts
takes
time
ram
minimize
fonts
applications
ll
speed
increases
load
time
simple
strategy
choose
fonts
roman
whatever
suits
configure
clients
heavily
clients
fonts
client
programs
start
quicker
font
loaded
server
conserve
server
resources
fewer
fonts
loaded
server
farrell
mckay
fbm
ptcburp
ptcbu
oz
au
joe
english
joe
trystero
art
com
eg
main
xterm
font
twm
set
menus
icons
etc
twm
default
font
don
normally
ve
eliminated
font
server
oliver
jones
oj
roadrunner
pictel
com
fonts
local
workstation
loading
nfs
extensive
scalable
fonts
font
server
resources
file
xresources
xdefaults
file
saves
ram
saves
server
startup
time
joe
english
joe
trystero
art
com
suggestion
xdefaults
xresources
file
try
putting
minimum
resources
available
applications
example
reversevideo
true
separate
resources
individual
client
specific
resource
files
example
home
lib
app
defaults
login
file
set
environment
variable
xuserfilesearchpath
setenv
xuserfilesearchpath
home
lib
app
defaults
comp
windows
frequently
questions
faq
contains
excellent
explanation
environment
variables
ed
xterm
launches
loads
resources
app
defaults
xterm
xdvi
app
defaults
xdvi
forth
note
clients
follow
xxxxx
resource
file
naming
pattern
check
system
app
defaults
directory
usr
lib
app
defaults
proper
name
name
personal
resource
files
name
documented
xt
specification
pg
thanks
kevin
samborn
samborn
mtkgc
com
michael
urban
urban
cobra
jpl
nasa
gov
mike
mikel
ee
cornell
edu
kevin
willing
mail
setup
files
inquirers
method
organizing
personal
resources
following
benefits
easier
maintain
usable
fewer
resources
stored
server
resource
manager
property
benefit
server
start
fractionally
quicker
doesn
load
resources
applications
process
own
resources
sort
resources
ones
affect
drawbacks
application
load
additional
file
time
starts
doesn
performance
difference
consider
huge
boon
usability
modifying
application
resource
database
re
run
application
xrdb
xrdb
default
run
xdefaults
file
cpp
resources
split
multiple
resource
files
loaded
individual
client
programs
watch
style
comments
xdefaults
file
cpp
stripped
switched
method
distributed
resource
files
spent
frustrating
days
trying
figure
clients
finding
resources
xt
provide
error
message
encountered
style
comments
resource
files
simply
silently
aborted
processing
resource
file
loss
preprocessing
handy
ifdef
color
cause
people
dismiss
method
resource
management
run
clients
break
rules
example
neither
emacs
nor
xvt
resources
xdefaults
starting
client
machine
share
files
machine
resources
stored
client
resources
loading
resources
server
guarantee
clients
resources
casey
leedom
casey
gauss
llnl
gov
compromise
suggestion
am
planning
trying
resources
heavily
clients
eg
xterm
xdefaults
file
separate
resources
files
method
clients
seldom
define
display
properly
client
programs
executed
machine
server
situation
setting
display
environment
variable
hostname
hostname
name
workstation
set
display
variable
unix
doing
access
optimized
routines
server
machine
shared
memory
method
transferring
requests
thanks
patrick
horgan
pjh
ras
amdahl
com
display
names
section
page
explanation
properly
set
display
name
don
stock
mit
data
hp
libraries
smart
local
communication
display
isn
set
specially
rob
sartin
opensi
sartin
uunet
uu
net
jody
goldberg
jody
algorithmics
com
sent
xlib
patch
change
stock
local
communication
display
properly
set
don
business
distributing
trying
juggle
mit
patches
elected
include
hopefully
mit
apply
minor
lines
patch
themselves
meantime
try
yourself
email
jody
ed
clients
megabytes
ram
carefully
programs
running
programs
running
example
clock
program
xclock
unfortunately
haven
noticed
programs
advertise
onus
research
spread
word
suggestions
alternatives
standard
clients
eg
xclock
xterm
xbiff
welcome
ed
ve
received
contradictory
advice
people
subject
client
programs
advocate
programs
strictly
xlib
based
xt
xaw
toolkits
warn
applications
using
loaded
shared
libraries
using
xt
example
client
program
actually
increase
amount
ram
consumed
upshot
don
mix
toolkits
try
athena
clients
xview
clients
motif
clients
etc
re
dragging
toolkit
library
environment
carefully
client
programs
environment
thanks
rob
sartin
opensi
sartin
uunet
uu
net
duncan
sinclair
sinclair
dcs
gla
ac
uk
sinclair
uk
ac
gla
dcs
clock
xcuckoo
suggested
duncan
sinclair
sinclair
dcs
gla
ac
uk
available
export
lcs
mit
edu
xcuckoo
displays
clock
title
bar
program
saves
screen
real
estate
mclock
suggested
der
mouse
mouse
lightning
mcrcim
mcgill
edu
available
larry
mcrcim
mcgill
edu
mclock
shar
xt
based
extensively
configurable
look
mit
oclock
xclock
purely
changing
resources
course
ultimate
clock
consumes
resources
takes
screen
real
estate
hangs
wall
terminal
emulator
readme
file
distributed
xterm
abandon
hope
ye
enter
undoubtedly
ugly
program
distribution
ugly
maybe
site
suspect
xterm
clients
sites
laziness
isn
terminal
emulator
available
below
xterm
try
reducing
savelines
reduce
memory
usage
oliver
jones
oj
roadrunner
pictel
com
jonny
farringdon
farringdon
psychol
ucl
ac
uk
xvt
suggested
richard
hesketh
rlh
ukc
ac
uk
available
export
lcs
mit
edu
contrib
xvt
tar
don
esoteric
features
xterm
hold
xvt
written
save
swap
space
xterm
hog
written
partial
clone
xterm
don
rename
resources
xvt
pretends
xterm
current
version
bind
keys
xterm
ve
heard
versions
xvt
feature
ve
found
update
march
recently
email
conversations
brian
warkentin
brian
warkentine
eng
sun
com
regarding
xvt
questions
xvt
faster
xterm
instance
xvt
initialize
slightly
faster
compare
scrolling
speed
try
quickie
benchmark
bin
time
dd
etc
termcap
bs
program
scroll
faster
xterm
slightly
larger
ram
requirements
don
hard
else
shared
libraries
shared
text
segments
mean
xterm
paging
requirements
major
experiment
ripped
tek
stuff
xterm
little
difference
brought
memory
stand
conflicting
reports
validity
xvt
xterm
summary
caveat
emptor
mileage
vary
provide
hard
data
specifically
ram
occupies
swap
relative
speed
mterm
suggested
der
mouse
mouse
lightning
mcrcim
mcgill
edu
available
larry
mcrcim
mcgill
edu
mterm
src
mterm
ball
wax
own
terminal
emulator
major
lack
scrollback
people
anyway
tuning
client
suggestions
tune
client
programs
faster
scott
barman
scott
asd
com
comes
suggestion
regarding
motif
text
field
widgets
noticed
data
entry
motif
text
field
widgets
getting
slight
lag
response
keystrokes
particularly
initial
field
examining
xscope
found
resource
xmnblinkrate
zero
focus
text
field
widget
text
widget
beam
cursor
blink
time
cursor
appears
disappears
widgets
widget
code
request
server
copyarea
user
stop
setting
resource
xmnblinkrate
noticeable
mhz
sparc
little
difference
slower
system
specific
suggestion
probably
applied
lots
consider
heavily
clients
minor
embellishments
thereby
save
server
requests
miscellaneous
suggestions
pretty
pictures
don
bitmaps
gif
etc
root
window
backgrounds
complicated
root
window
bitmap
slower
server
redrawing
screen
reposition
windows
redraw
etc
ram
cpu
power
sun
sparc
conscious
performance
issues
comprehend
people
mb
sun
running
xphoon
root
window
ll
else
figure
ram
occupied
screen
root
image
colour
workstation
re
screen
real
estate
clients
rarely
root
window
anyway
thanks
qiang
alex
zhao
azhao
cs
arizona
edu
reminding
ed
quicker
mouse
using
xset
adjust
fast
pointer
moves
screen
move
mouse
xset
xinitrc
file
send
pointer
screen
flick
wrist
xset
page
ideas
information
hint
sometimes
slow
mouse
tracking
fine
cover
options
placed
mouse
setting
commands
menu
window
manager
twm
menu
mouse
settings
mouse
settings
title
fast
xset
normal
fast
xset
system
default
un
accelerated
xset
default
glacial
xset
programming
joe
english
joe
trystero
art
com
speed
applications
re
developing
tons
stick
motif
programs
don
set
xmfontlist
resources
individual
buttons
labels
lists
et
al
defaultfontlist
labelfontlist
whatever
resource
level
manager
widget
stick
fonts
don
motif
absolute
pig
don
create
destroy
widgets
fly
try
reuse
avoid
buggy
toolkits
line
width
gcs
servers
makes
huge
difference
compress
collapse
multiple
expose
events
difference
fast
application
completely
unusable
francois
staes
frans
kiwi
uia
ac
remark
heard
using
malloc
function
greatly
increase
performance
xt
based
applications
malloc
heavily
suggested
trying
gnuy
malloc
didn
time
tests
programs
doing
malloc
free
differences
indeed
noticeable
somewhat
times
faster
confirmation
ed
andre
beck
andre
beck
irs
inf
tu
dresden
de
unnecessary
noexpose
events
people
xcopyarea
xcopyplane
fastest
blit
routines
forget
reset
graphics
exposures
gc
blits
cause
noexpose
event
blit
load
onto
connection
forces
client
run
event
loop
thousands
xchangegc
requests
gfx
context
switching
seen
handcoded
apps
gcs
created
heavily
changed
xt
definitely
mechanism
caching
sharing
lot
gcs
parameters
remove
load
subsequent
xchangegc
requests
connection
moving
client
startup
phase
contributors
proposed
ideas
wall
david
lewis
day
dbl
osf
org
night
david
craft
uunet
uu
net
swap
displays
else
run
programs
machine
display
locally
user
runs
machine
onto
display
goal
reduce
context
switches
operation
client
server
situation
easily
try
received
following
confirmation
michael
salmon
michael
salmon
eos
ericsson
se
regularly
run
programs
machines
notice
difference
try
run
machine
reduce
net
usage
usually
nice
reduce
impact
intrusion
helps
lot
poor
little
ss
mb
essential
mb
casey
leedom
casey
gauss
llnl
gov
server
client
competing
cpu
server
run
machine
major
except
client
server
absolute
synchronicity
context
thrashing
timothy
panton
thp
westhawk
uucp
firstly
relies
cpu
idle
cpu
usage
bursty
chances
teammate
doing
cpu
intensive
time
twice
cpu
memory
available
action
factor
context
switches
expensive
using
cpu
halves
pay
price
due
overhead
network
offset
improved
buffering
network
typically
vs
pipe
allowing
fewer
context
switches
sources
information
volume
reilly
window
system
series
window
system
administrator
guide
book
administrator
read
adrian
nye
adrian
ora
com
lot
tips
performance
paper
improving
application
performance
chris
peterson
sharon
chang
issue
resource
earlier
version
paper
appeared
xhibition
conference
proceedings
paper
absolutely
essential
reading
programmers
author
notes
list
currently
maintained
art
mulder
art
cs
ualberta
ca
suggestions
corrections
submission
inclusion
list
gladly
accepted
layout
suggestions
comments
spelling
mistak
welcome
currently
listed
contributors
various
comments
suggestions
credited
please
tell
speedup
faq
copyright
arthur
mulder
copy
document
don
try
money
pretend
wrote
art
mulder
art
cs
ualberta
ca
conformed
world
department
computing
science
transformed
renewal
university
alberta
edmonton
canada
mind
romans